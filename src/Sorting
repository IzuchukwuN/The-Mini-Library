import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;

public class Sorting {
	
	private List<AbstractBook> books;

    // Constructor to initialize the Sorting object with the library's books
    public Sorting() {
        this.books = new ArrayList<>();
    }

    // Constructor to accept a pre-existing books list
    public Sorting(List<AbstractBook> books) {
        this.books = books;
    }

    // Method to load books from the LibrarySystem into the Sorting class
    public void loadBooksFromLibrary(LibrarySystem librarySystem) {
        this.books = librarySystem.getAllBooks();
    }

    // Sort books by title
    public void sortBooksByTitle() {
        if (books == null || books.isEmpty()) {
            System.out.println("No books to sort.");
            return;
        }
        books.sort(Comparator.comparing(AbstractBook::getTitle));
        System.out.println("Books sorted by title successfully.");
    }

    // Sort books by ISBN
    public void sortBooksByISBN() {
        if (books == null || books.isEmpty()) {
            System.out.println("No books to sort.");
            return;
        }
        books.sort(Comparator.comparing(AbstractBook::getISBN));
        System.out.println("Books sorted by ISBN successfully.");
    }

    // Sort books by genre
    public void sortBooksByGenre() {
        if (books == null || books.isEmpty()) {
            System.out.println("No books to sort.");
            return;
        }
        books.sort(Comparator.comparing(AbstractBook::getGenre));
        System.out.println("Books sorted by genre successfully.");
    }

    // Display sorted books
    public void displaySortedBooks() {
        if (books == null || books.isEmpty()) {
            System.out.println("No books to display.");
            return;
        }
        System.out.println("Books list:");
        for (AbstractBook book : books) {
            book.displayBookInfo();
        }
    }
	
	}
